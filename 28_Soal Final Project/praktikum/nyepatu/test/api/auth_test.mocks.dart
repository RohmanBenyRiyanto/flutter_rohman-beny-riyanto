// Mocks generated by Mockito 5.1.0 from annotations
// in nyepatu/test/api/auth_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/mockito.dart';
import 'package:nyepatu/models/user_models.dart' as _i2;
import 'package:nyepatu/services/auth_services.dart' as _i3;

import 'package:http/http.dart' as http;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class MockClient extends Mock implements http.Client {}

class _FakeUserModel_0 extends _i1.Fake implements _i2.UserModel {}

/// A class which mocks [AuthService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthService extends _i1.Mock implements _i3.AuthService {
  MockAuthService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get basedUrl =>
      (super.noSuchMethod(Invocation.getter(#basedUrl), returnValue: '')
          as String);
  @override
  set basedUrl(String? _basedUrl) =>
      super.noSuchMethod(Invocation.setter(#basedUrl, _basedUrl),
          returnValueForMissingStub: null);
  @override
  _i4.Future<_i2.UserModel> register(
          String? name, String? username, String? email, String? password) =>
      (super.noSuchMethod(
              Invocation.method(#register, [name, username, email, password]),
              returnValue: Future<_i2.UserModel>.value(_FakeUserModel_0()))
          as _i4.Future<_i2.UserModel>);
  @override
  _i4.Future<_i2.UserModel> login(String? email, String? password) =>
      (super.noSuchMethod(Invocation.method(#login, [email, password]),
              returnValue: Future<_i2.UserModel>.value(_FakeUserModel_0()))
          as _i4.Future<_i2.UserModel>);
  @override
  _i4.Future<_i2.UserModel> currentUser(String? token) =>
      (super.noSuchMethod(Invocation.method(#currentUser, [token]),
              returnValue: Future<_i2.UserModel>.value(_FakeUserModel_0()))
          as _i4.Future<_i2.UserModel>);
  @override
  _i4.Future<_i2.UserModel> updateUser(
          String? token, String? name, String? username, String? email) =>
      (super.noSuchMethod(
              Invocation.method(#updateUser, [token, name, username, email]),
              returnValue: Future<_i2.UserModel>.value(_FakeUserModel_0()))
          as _i4.Future<_i2.UserModel>);
  @override
  _i4.Future<bool> logout(String? token) =>
      (super.noSuchMethod(Invocation.method(#logout, [token]),
          returnValue: Future<bool>.value(false)) as _i4.Future<bool>);
}
